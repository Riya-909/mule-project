name: MuleSoft CI/CD Pipeline

on:
  push:
    branches:
      - main    # Trigger on push to the main branch
  pull_request:
    branches:
      - main    # Trigger on pull requests to the main branch

jobs:
  build:
    runs-on: windows-latest    # Use the latest Windows runner for the build

    steps:
      # Step 1: Checkout the code
      - name: Checkout code
        uses: actions/checkout@v3    # Action to check out your repository code

      # Step 2: Set up Java 11 (using Adoptium's Temurin distribution)
      - name: Set up Java 11
        uses: actions/setup-java@v3    # Setup Java using the latest version of the action
        with:
          java-version: '11'          # Specify Java version (Java 11)
          distribution: 'temurin'     # Set the correct distribution for Java (temurin for Adoptium)

      # Step 3: Install Maven on Windows using Chocolatey
      - name: Install Maven
        run: choco install maven -y   # Use Chocolatey to install Maven on Windows

      # Step 4: Verify if Maven is installed correctly
      - name: Verify Maven installation
        run: mvn -v   # Ensure that Maven is installed properly and available

      # Step 5: Change directory to where the pom.xml file is located (e.g., root directory)
      - name: Change directory to root
        run: cd ${{ github.workspace }}   # Ensures that Maven runs in the root directory

      # Step 6: Cache Maven dependencies to speed up the build
      - name: Cache Maven dependencies
        uses: actions/cache@v3
        with:
          path: C:\Users\runneradmin\.m2\repository    # Path for Maven's local repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}   # Cache key based on the pom.xml file
          restore-keys: |
            ${{ runner.os }}-maven-

      # Step 7: Build the MuleSoft project using Maven
      - name: Build with Maven
        run: mvn clean install -DskipTests    # Builds the project, skipping tests (remove '-DskipTests' if you want to run tests)

  # Optionally: Add a deployment step here when youâ€™re ready (example)
  # deploy:
  #   runs-on: windows-latest
  #   steps:
  #     - name: Checkout code
  #       uses: actions/checkout@v3
  #     - name: Deploy to MuleSoft Server
  #       run: ./deploy.sh   # Replace with actual deployment command
